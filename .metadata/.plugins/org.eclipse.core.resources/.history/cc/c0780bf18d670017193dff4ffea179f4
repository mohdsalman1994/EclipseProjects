package com.aceprogrammer.basics.myHashMap;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

public class HashFilePopulator {
	
	
	// the path where our feeder file is present
	private String filePath = "src/resources/hashFeed.txt";
	private File file = new File(filePath);
	
	// intermediate holder for our nos
	String[] noArray;
	
	// our main game
	Map<Integer, List<Integer>> myHashMap = new TreeMap<Integer, List<Integer>>();

	public static void main(String[] args) throws IOException {
		
		HashFilePopulator hashPop = new HashFilePopulator();
		
		// read the txt file and store the no's into an array
		hashPop.read();
		
		// populate our map
		hashPop.populate();
		
		// save our file as a Serialized Object
		

	}
	
	private void read() throws IOException {
		
		// populate our array from the file
		try(BufferedReader br = new BufferedReader(new BufferedReader(new FileReader(file))))
		{
			String str = br.readLine();
			noArray = str.split(" ");			
		}
				
	}
	
	private void populate() {
		
		// traverse our noArray and keep populating our Map
		for (String string : noArray) {
			
			int no = Integer.parseInt(string);
			
			// calculate key and check if it already exists
			int key = no % 11;
			
			// if yes then directly push the no to it's corresponding list
			if(myHashMap.containsKey(key))
			{
				List<Integer> list = myHashMap.get(key);
				
				// add more logic here to check if the value already exists in there
				// if yes then pop it else push it
				
				if(list.contains(no))
				{
					System.out.println("Given no is already present in the Map");
					System.out.println("Popping it from the list");
					list.remove(no);
					myHashMap.put(key, list);
				}
				
				else
				{				
					list.add(no);
					myHashMap.put(key, list);
				}
				
			
			}
			
			
			
			
		}
		
		
	}


}
